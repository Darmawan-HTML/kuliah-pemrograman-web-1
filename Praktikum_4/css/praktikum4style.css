@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap");

:root {
    interpolate-size: allow-keywords;
}

* {
    box-sizing: border-box;
}

body {
    padding: 0;
    margin: 0;
    height: 100%;
    overscroll-behavior: none;
    font-family: "JetBrains Mono";
}

.site-main {
    top: 0;
    position: sticky;
	z-index: 1;
    display: flex;
    justify-content: space-between;
    padding-left: 8em;
    padding-right: 8em;
    align-items: center;
    background-color: oklch(0.73 0.0584 251.06);
    border-bottom-left-radius: 100px;
    border-bottom-right-radius: 100px;

    nav ul {
        list-style: none;
        margin: 0;
        padding: 0;

        border: none;
        padding: 0.5rem 0;
        overflow-x: visible;

        display: flex;
        flex-direction: row;
        gap: 0.5rem;

        width: 4.5rem;
        padding: 1rem;

        .navRow {
            display: grid;
            grid-template-columns: 1.5rem auto;
            gap: 1rem;
            padding: 0.5rem;
            font-size: 1rem;
            transition-duration: 0.25s;
            align-items: center;
            background: #eaeaea;
            border-radius: 0.5rem;
            color: #5f6368;
            text-decoration: none;

            white-space: nowrap;
            width: 2.5rem;
            overflow-x: hidden;
            transition: width 0.35s ease;

            &:hover {
                background: lightgray;
                color: #333;
                /* width: 7rem; */
                width: max-content;
            }
        }

        .text {
            padding-right: 0.75rem;
            font-family: "Open Sans", sans-serif;
            font-optical-sizing: auto;
            font-weight: 500;
        }
    }
}

/* Three column layout */
.columns {
    display: grid;
    grid-template-columns: repeat(3, 1fr);

    width: 100%;
    max-width: 80em;
    margin: 0 auto;
    position: relative;
}

/* Inside one column, lay out all items in column direction */
.column {
    --column-offset: 10vh;
    display: flex;
    flex-direction: column;
    padding: var(--column-offset) 0;
}

/* Limit site of the images */
.column__item-imgwrap img {
    border-radius: 1em;
    width: 100%;
    height: auto;
    aspect-ratio: 0.75;
    object-fit: cover;
}

.column__item-caption {
    text-align: center;
}

/* Adjust position of warning */
.warning {
    position: fixed;
    top: 1rem;
    left: 1rem;
    right: 1rem;
    max-width: 80em;
    margin: auto;
    z-index: 2;
}

@supports (animation-timeline: scroll()) {
    /* As we're about to shift content out of .columns, we need it to hide its overflow */
    .columns {
        overflow-y: hidden;
    }

    .column-reverse {
        /* Flip item order in reverse columns */
        flex-direction: column-reverse;
    }

    /* Set up Animation */
    @keyframes adjust-position {
        /* Start position: shift entire column up, but not so that it goes out of view */
        from {
            transform: translateY(calc(-100% + 100vh));
        }

        /* End position: shift entire column down, but not so that it goes out of view */
        to {
            transform: translateY(calc(100% - 100vh));
        }
    }

    /* Hook our animation with the timeline to our columns */
    .column-reverse {
        animation: adjust-position linear forwards;
        animation-timeline: scroll(root block);
    }
}
